@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Account.Localization
@using Volo.Abp.Account.Settings
@using Volo.Abp.Identity;
@using Volo.Abp.Settings
@using Generic.Abp.TailWindCss.Account.Web.Pages.Account
@using Generic.Abp.TailWindCss.Account.Web.Models
@model Generic.Abp.TailWindCss.Account.Web.Pages.Account.LoginModel
@inject IHtmlLocalizer<AccountResource> L
@inject Volo.Abp.Settings.ISettingProvider SettingProvider
@{
    Layout = "Shared/_AccountLayout";
}

@section scripts
    {
    <abp-script-bundle name="@typeof(LoginModel).FullName">
        <abp-script src="/Pages/Account/Login.js" />
    </abp-script-bundle>
    }



    <h2 class="card-title">@L["Login"]</h2>
        @if (Model.EnableLocalLogin)
        {
            <form method="post" class="validate-form">
                <input data-role="input" asp-for="LoginInput.UserNameOrEmailAddress" iconCls="fas fa-user text-info" autocomplete="username" />
                <input data-role="input" asp-for="LoginInput.Password" iconCls="fas fa-key text-info" autocomplete="password" />
                
                @*
                @await Html.PartialAsync("Shared/Form/_Input", new InputModel(
                    Html.TextBoxFor(m => m.LoginInput.UserNameOrEmailAddress),
                    iconCls: "fas fa-user text-info",
                    placeholder: L["UserNameOrEmailAddress"].Value,
                    autocomplete: "username"))
                <span asp-validation-for="LoginInput.UserNameOrEmailAddress" class="text-danger"></span>
                <span asp-validation-for="LoginInput.Password"></span>
                @await Html.PartialAsync("Shared/Form/_Input", new InputModel(
                    Html.TextBoxFor(m => m.LoginInput.Password),
                    iconCls: "fas fa-key text-info",
                    placeholder: L["Password"].Value,
                    autocomplete: "current-password"))
    *@
                <div class="flex justify-between items-center mt-4">
                    <div class="form-control">
                        <label class="label cursor-pointer">
                            <input asp-for="LoginInput.RememberMe" name="rememberMe" type="checkbox" class="checkbox"/>
                            <span class="label-text ml-2">@L["RememberMe"].Value</span>
                        </label>
                    </div>
                    <div class="flex-1 text-right">
                        <a class="text-sm text-primary" href="@Url.Page("./ForgotPassword", new { returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash })">@L["ForgotPassword"]</a>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary w-full text-white text-lg mt-4">@L["Login"]</button>
            </form>
        }

        @if (Model.VisibleExternalProviders.Any())
        {
            <div class="text-center">
                <form asp-page="./Login" asp-page-handler="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" asp-route-returnUrlHash="@Model.ReturnUrlHash" method="post">
                    @foreach (var provider in Model.VisibleExternalProviders)
                    {
                        <button type="submit" class="m-1 rounded-full" name="provider" value="@provider.AuthenticationScheme" title="@L["LogInUsingYourProviderAccount", provider.DisplayName]">
                    <i class="fab fa-@provider?.DisplayName.ToLower() text-external-login-icon"></i>
                        </button>
                    }
                </form>
            </div>
        }
        
        @if (await SettingProvider.IsTrueAsync(AccountSettingNames.IsSelfRegistrationEnabled))
        {
            <div class=" font-bold text-sm mt-2">
                    @L["AreYouANewUser"]
                    <a href="@Url.Page("./Register", new {returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash})" class="text-sm text-primary">@L["Register"]</a>
            </div>

        }


        @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
        {
            <div class="alert alert-warning">
                <strong>@L["InvalidLoginRequest"]</strong>
                @L["ThereAreNoLoginSchemesConfiguredForThisClient"]
            </div>
        }

